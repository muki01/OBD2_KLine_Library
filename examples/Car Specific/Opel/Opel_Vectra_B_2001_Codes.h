//   Opel Vectra B 2001
//------------------------------------------------  ECU Addresses  ----------------------------------

uint8_t engineAddress = 0x11;
uint8_t imoAddress = 0xC0;
uint8_t gearBoxAddress = 0x18;


//------------------------------------------------  Tester Requests  ----------------------------------
//Engine - ISO14230 10400 Baud
uint8_t engineInit0[5] = { 0x00, 0x81, 0x11, 0xF1, 0x81 };
uint8_t engineInit[4] = { 0x81, 0x11, 0xF1, 0x81 };                   // Receive 83 F1 11 C1 EF 8F C4
uint8_t engineCheckConnection[5] = { 0x80, 0x11, 0xF1, 0x01, 0x3E };  // Receive 81 F1 11 7E 01

uint8_t fuel_pump_relay[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x13, 0x07, 0xFF };
uint8_t ignition_coil_1[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x40, 0x07, 0x01 };
uint8_t ignition_coil_2[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x40, 0x07, 0x02 };
uint8_t ignition_coil_3[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x40, 0x07, 0x03 };
uint8_t ignition_coil_4[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x40, 0x07, 0x04 };
uint8_t throttle_control[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x16, 0x07, 0xFF };
uint8_t ac_relay[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x07, 0x14, 0xFF };
uint8_t mil_lamp_on[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x08, 0x11, 0xFF };
uint8_t mil_lamp_off[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x08, 0x11, 0x00 };
uint8_t service_lamp_on[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x10, 0x07, 0xFF };
uint8_t service_lamp_off[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x10, 0x07, 0x00 };
uint8_t tank_valve_20[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x36, 0x07, 0x28 };
uint8_t tank_valve_100[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x36, 0x07, 0xFF };
uint8_t cylinder1_injection_cut[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x42, 0x07, 0x01 };
uint8_t cylinder2_injection_cut[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x42, 0x07, 0x02 };
uint8_t cylinder3_injection_cut[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x42, 0x07, 0x03 };
uint8_t cylinder4_injection_cut[8] = { 0x80, 0x11, 0xF1, 0x04, 0x30, 0x42, 0x07, 0x04 };

uint8_t engineReadLiveData1[6] = { 0x80, 0x11, 0xF1, 0x02, 0x21, 0x01 };
uint8_t engineReadLiveData2[6] = { 0x80, 0x11, 0xF1, 0x02, 0x1A, 0x80 };  // Engine ECU Type Data
uint8_t engineReadLiveData3[6] = { 0x80, 0x11, 0xF1, 0x02, 0x1A, 0x81 };  // Engine ECU Type Data
uint8_t engineReadDTCs[8] = { 0x80, 0x11, 0xF1, 0x04, 0x18, 0x00, 0xFF, 0x00 };
uint8_t engineClearDTCs[7] = { 0x80, 0x11, 0xF1, 0x03, 0x14, 0xFF, 0x00 };

//Imo - ISO14230 10400 Baud
uint8_t imoInit0[5] = { 0x00, 0x81, 0xC0, 0xF1, 0x81 };
uint8_t imoInit[4] = { 0x81, 0xC0, 0xF1, 0x81 };
uint8_t imoKeepalive[2] = { 0x01, 0x3E };
uint8_t imoReadLiveData[4] = { 0x02, 0x21, 0x01, 0x24 };
uint8_t imoReadDTCs[6] = { 0x04, 0x18, 0x00, 0xFF, 0x00, 0x1B };   
uint8_t imoClearDTCs[5] = { 0x03, 0x14, 0xFF, 0x00, 0x16 };   


//Instrument Cluster - KW82 4800 Baud   with Checksums
uint8_t instumentClusterInit[1] = { 0x7F };
uint8_t instumentClusterLiveData[4] = { 0x02, 0x11, 0x00, 0x13 };  // LiveData + DTC
uint8_t instumentClusterClearDTC[4] = { 0x02, 0xB1, 0x00, 0xB3 };
//uint8_t instumentClusterClearDTC2[8] = { 0x06, 0xF0, 0xAA, 0x10, 0x32, 0x10, 0x01, 0xF2 };







//------------------------------------------------  ECU Responses  ----------------------------------
//ISO14230 10400 Baud
uint8_t engineInit_Response[6] = { 0x83, 0xF1, 0x11, 0xC1, 0xEF, 0x8F };  // 0xC4
uint8_t engineCheckConnection_Response[4] = { 0x81, 0xF1, 0x11, 0x7E };   // 0x01
uint8_t engineReadLiveData1_Response[119] = {
  0x80, 0xF1, 0x11, 0x73, 0x61, 0x01,
  0x01, 0x02, 0x30, 0x24,
  0x00, 0x00, 0x00, 0x01,
  0x08, 0x00,
  0x02,
  0x00, 0x00,
  0xA2,
  0x00, 0x00,
  0xA1, 0x0F,
  0x00, 0x00,
  0x63,
  0x01,  // Throttle status
  0x00,
  0x01,  // Air / Fuel Mixture bank 1 sound 1
  0x00,
  0x01,  //MIL Lamp
  0x00,  //Electronic throtle control - limp home position
  0x00,  //Knock Control Cylinder 1
  0x00,
  0x29,  //Brake Switch 1, Brake Switch 2  (binary = bit4 switch1, bit5 switch2)
  0xE0,
  0x8E,        //Battery Voltage   (data / 0.102 = voltage)
  0x0F, 0x8C,  //Engine RPM
  0x5E,
  0x4E,  //Desired idling rpm
  0x0F,  //Vehicle Speed
  0x00,
  0xE9,  //Voltage Coolant Temp
  0x4A,  //Coolant Temp   (Decimal - 40)
  0x6C,  //Voltage Intake air temperature
  0x3F,  //Intake air temperature (Decimal - 40)
  0x37,
  0x01,        //Air mass meter voltage
  0x00, 0x00,  //Air mass meter kg/h
  0x2A, 0xEA,
  0x42,  // Accelerator pedal position Sensor 1 Voltage
  0x28,  // Accelerator pedal position Sensor 2 Voltage
  0x86,
  0x39,  // Accelerator pedal position
  0x39,  // Throttle position Sensor 1 Voltage
  0xE7,  // Throttle position Sensor 2 Voltage
  0x5A,
  0x1D,  // Throttle position
  0x00, 0x00, 0x00, 0x00,
  0x7F,  // Tank venting valve %
  0x7E, 0x38, 0xFA, 0x19,
  0x00,
  0x7F,  //Ignition Instant
  0x00, 0x10, 0xFA, 0xFA, 0x64,
  0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x01,  //Knock Control Cylinder 1,2,3
  0x00, 0x80,
  0x00, 0x15, 0x15,
  0x00, 0x00,
  0x18, 0xFF, 0x01, 0x0E,
  0x00, 0xFC,
  0x00,
  0xF5,  //Learning counter electronic throttle control
  0x09,
  0x00, 0x00,
  0xFC, 0xD1, 0xFF, 0xB1, 0x28, 0xF6,
  0x00, 0x00,
  0xFF,
  0x00, 0x00, 0x00,
  0x8B, 0x14, 0x10  //- Checksum
};

uint8_t engineReadLiveData2_Response[131] = {
  0x80, 0xF1, 0x11, 0x7F, 0x5A, 0x80,
  0x4C, 0x00, 0x09, 0x00, 0x00, 0xA0, 0x08, 0x00,
  0x57, 0x30, 0x4C, 0x30, 0x4A, 0x42, 0x46, 0x33, 0x35, 0x31, 0x37, 0x30, 0x35, 0x30, 0x36, 0x39, 0x34,  // ---VIN (W0L0JBF3517050694)
  0x30, 0x39, 0x31, 0x35, 0x38, 0x36, 0x38, 0x39,                                                        // ---Part Number, Hardware number (09158689)
  0x20,                                                                                                  // " "
  0x43, 0x41, 0x53, 0x49, 0x45,                                                                          // Ascii - CASIE
  0x20, 0x20,                                                                                            // " "    " "
  0x30, 0x31, 0x31, 0x36, 0x30, 0x30, 0x33, 0x30, 0x30,                                                  // ---Hardware version (01160030) (SIE  011600300)
  0x30, 0x36, 0x35, 0x38, 0x36, 0x31, 0x31, 0x35, 0x31,                                                  // ---Software number (065861151) (65861151)
  0x30, 0x38,                                                                                            // 08
  0x20, 0x20,                                                                                            // " "    " "
  0x0A, 0x01,                                                                                            //
  0x53, 0x30, 0x31, 0x30, 0x30, 0x32,                                                                    // ---Software upgrade (S01002)
  0x5A, 0x31, 0x38, 0x58, 0x45,                                                                          // ---Engine Code (Z18XE)
  0x20,                                                                                                  // " "
  0x54, 0x36, 0x38, 0x37, 0x30, 0x30, 0x38, 0x36, 0x38, 0x38,                                            // T687008688
  0x20,                                                                                                  // " "
  0x18, 0x12, 0x04,                                                                                      //
  0x16, 0x23,                                                                                            // ---Diagnostic Version - HEX to STRING (1623)
  0x4F, 0x31, 0x30, 0x44, 0x31, 0x30, 0x31, 0x43,                                                        // O10D101C
  0x4F, 0x32, 0x43, 0x44, 0x31, 0x30, 0x31, 0x41,                                                        // ---Calibration ID, Software Version (O2CD101A)
  0x36, 0x35, 0x38, 0x36, 0x30,                                                                          // 65860
  0x35, 0x35, 0x32, 0x30, 0x33,                                                                          // 55203
  0x20, 0x20,                                                                                            // " "    " "
  0x33, 0x33, 0x33                                                                                       //, 0x70 - Checksum - All Line by me
};

uint8_t engineReadLiveData3_Response[52] = {
  0xB1, 0xF1, 0x11, 0x5A, 0x81, 0x03, 0x8F, 0x68,
  0x04, 0x90, 0x6F, 0x62, 0x03, 0x91, 0x6B, 0x03,
  0x92, 0x6F, 0x03, 0x94, 0x6C, 0x03, 0x95, 0x02,
  0x03, 0x96, 0x66, 0x03, 0x97, 0x66, 0x03, 0x98,
  0x6A, 0x03, 0x99, 0x44, 0x03, 0x9A, 0x02, 0x03,
  0x9B, 0x68, 0x03, 0x9C, 0x68, 0x03, 0x9D, 0x6C,
  0x03, 0x9E, 0x64, 0xFF  //, 0x2D - Checksum
};

//ISO14230 10400 Baud
uint8_t imoInit_Response[6] = { 0x83, 0xF1, 0xC0, 0xC1, 0xE5, 0x8F };                                                            // 0x69
uint8_t imoKeepalive_Response[2] = { 0x01, 0x7E };                                                                               // 0x7F
//uint8_t imoReadLiveData_Response[5] = { 0x04, 0x5A, 0x9A, 0x01, 0x01 };                                                         // 0xFA
//uint8_t imoReadLiveData_Response[14] = { 0x0D, 0x5A, 0x91, 0x32, 0x34, 0x34, 0x34, 0x35, 0x30, 0x39, 0x38, 0x32, 0x36, 0x34 };  // 0x38
uint8_t imoReadLiveData_Response[9] = { 0x08, 0x5A, 0x9B, 0x30, 0x31, 0x30, 0x32, 0x30, 0x37 };                                 // 0x27
uint8_t imoReadDTCs_Response[3] = { 0x02, 0x58, 0x01 };                                                                          // 0x5B
//uint8_t imoClearDTCs_Response[5] = {  };   

//KW82    4800 Baud
uint8_t instumentClusterInit_Response[3] = { 0x55, 0x52, 0x80 };
uint8_t instumentClusterKeepalive_Response[34] = { 0x20, 0xA0, 0x20, 0x32, 0x34, 0x34, 0x32, 0x32, 0x32, 0x30, 0x33, 0x20, 0x30, 0x39, 0x39, 0x39, 0x20, 0x35, 0x31, 0x39, 0x38, 0x20, 0x30, 0x34, 0x30, 0x31, 0x20, 0x30, 0x32, 0x31, 0x20, 0x32, 0x06, 0x4F };
uint8_t instumentClusterLiveData_Response[35] = {
  0x21,                                                        //Length
  0xA1, 0x28,                                                  //
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  //DTCs
  0x00, 0x01, 0x00, 0x00,                                      //
  0x14, 0x1F,                                                  //Speed     Exaple speed: 192; (192*4) = 768; 768 to HEX = 0300;  Speed Bytes = 0x00, 0x03   932
  0x75, 0x31, 0x31, 0xF0,                                      //
  0x78,                                                        //CoolantTemp
  0x44,                                                        //
  0x42, 0x0F,                                                  //All Kilometers       Byte1 × 26 + Byte2 × 6,553
  0x18, 0x09,                                                  //Kilometers
  0xB5, 0xC5,                                                  //
  0x3F, 0x01,                                                  //
  0x05,                                                        // Not Added to checksum calculation
  0xF3                                                         // Checksum
};
